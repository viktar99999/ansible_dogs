---
- hosts: all
  gather_facts: No
  tasks:
    - name: Download containerd
      get_url:
        url: "https://github.com/containerd/containerd/releases/download/v1.7.0/containerd-1.7.0-linux-amd64.tar.gz"
        dest: "/tmp/containerd-1.7.0-linux-amd64.tar.gz"
    - name: Unarchive
      unarchive:
        src: /tmp/containerd-1.7.0-linux-amd64.tar.gz
        dest: /usr/local
        copy: no
    - name: Del archive
      file:
        path: "/tmp/containerd-1.7.0-linux-amd64.tar.gz"
        state: absent
    - name: Create dir for config containerd
      file:
        path: /etc/containerd/
        state: directory
    - name: Register containerd_dir
      stat:
        path: /etc/containerd
      register: containerd_dir
    - name: Create config_file containerd
      become: true
      command: "sh -c 'containerd config default > /etc/containerd/config.toml'"
      when: containerd_dir.stat.exists
    - name: Configuration cgroup driver
      replace:
        path: "/etc/containerd/config.toml"
        regexp: "SystemdCgroup = false"
        replace: "SystemdCgroup = true"
    - name: Download containerd systemd service file
      get_url:
        url: "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
        dest: "/etc/systemd/system/containerd.service"
    - name: Download and install runc
      get_url:
        url: "https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64"
        dest: "/usr/local/sbin/runc"
        mode: "u+x"
    - name: Download CNI plugins
      get_url:
        url: "https://github.com/containernetworking/plugins/releases/download/v1.2.0/cni-plugins-linux-amd64-v1.2.0.tgz"
        dest: "/tmp/cni-plugins-linux-amd64-v1.2.0.tgz"
    - name: Unarchive CNI plugins archive
      unarchive:
        src: "/tmp/cni-plugins-linux-amd64-v1.2.0.tgz"
        dest: "/opt/cni/bin"
        copy: no
    - name: DelCNI plugins archive
      file:
        path: "/tmp/cni-plugins-linux-amd64-v1.2.0.tgz"
        state: absent
    - name: Reload systemd
      systemd:
        daemon_reload: yes
    - name: Start and activation containerd service
      systemd:
        name: containerd
        state: started
        enabled: yes
